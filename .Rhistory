col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa +
geom_point(aes(x = lon, y = lat,
colour = antioxidantes),
alpha = 0.6,  size = 5,
data = miel) +
scale_color_gradient(low = 'orange', high = 'brown')
mapa +
geom_point(aes(x = lon, y = lat,
colour = antirradicalario),
alpha = 0.6,  size = 5,
data = miel) +
scale_color_gradient(low = 'green', high = 'pink')
mapa <- qmap('Futrono')
mapa +
geom_point(aes(x = lon, y = lat),
col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa <- qmap('Osorno')
mapa +
geom_point(aes(x = lon, y = lat),
col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa <- qmap('Osorno', zoom = 7)
mapa +
geom_point(aes(x = lon, y = lat),
col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa <- qmap('Puerto Montt', zoom = 5)
mapa +
geom_point(aes(x = lon, y = lat),
col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa <- qmap('Puerto Montt', zoom = 6)
mapa +
geom_point(aes(x = lon, y = lat),
col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa <- qmap('Maulin', zoom = 8)
mapa +
geom_point(aes(x = lon, y = lat),
col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa <- qmap('Maulín', zoom = 8)
mapa <- qmap('Calbuco', zoom = 8)
mapa +
geom_point(aes(x = lon, y = lat),
col = 2,
data = miel,
size = 2) +
geom_text(data= miel, aes(label = ID),
hjust = 0,
nudge_x = 0.01,
nudge_y = 0.01)
mapa <- qmap('Puerto Montt', zoom = 8)
mapa +
geom_point(aes(x = lon, y = lat,
size = produccion),
col = 2,
data = miel)
mapa +
geom_point(aes(x = lon, y = lat,
colour = antioxidantes),
alpha = 0.6,  size = 5,
data = miel) +
scale_color_gradient(low = 'orange', high = 'brown')
mapa +
geom_point(aes(x = lon, y = lat,
colour = antioxidantes),
size = 5, col = 'black',
data = subset(miel, enfermedades_detectados == 'SI'))
cor.fenol.ax <- with(miel %>% filter(Localidad == 'Osorno'),
cor(fenoles, antioxidantes))
ggplot(data = miel %>% filter(Localidad == 'Osorno'),
aes(x = fenoles, y = antioxidantes)) +
geom_point() +
geom_smooth(method = 'lm') +
geom_text(data = NULL, x = 0.4, y = 4,
label = paste("Correlación = ", round(cor.fenol.ax, 3)),
size = 5) +
xlab('Fenoles  [g/kg]') +
ylab('Antioxidantes [mM Fe+2 eq]')
with(miel %>% filter(Localidad == 'Osorno'),
cor(fenoles, antioxidantes))
ggplot(data = miel %>% filter(Localidad == 'Osorno'),
aes(x = fenoles, y = antioxidantes)) +
geom_point() +
geom_smooth(method = 'lm')
cor.fenol.ax <- with(miel %>% filter(Localidad == 'Osorno'),
cor(fenoles, antioxidantes))
cor.fenol.ax <- with(miel %>% filter(Localidad == 'Osorno'),
cor(fenoles, antioxidantes))
ggplot(data = miel %>% filter(Localidad == 'Osorno'),
aes(x = fenoles, y = antioxidantes)) +
geom_point() +
geom_smooth(method = 'lm') +
geom_text(data = NULL, x = 0.4, y = 4,
label = paste("Correlación = ", round(cor.fenol.ax, 3)),
size = 5) +
xlab('Fenoles  [g/kg]') +
ylab('Antioxidantes [mM Fe+2 eq]')
cor.fenol.ar <- with(miel %>% filter(Localidad == 'Osorno'),
cor(fenoles, antirradicalario,
use = 'complete.obs'))
Sys.which("python")
install.packages('webshot')
webshot::install phantomjs()
webshot::install_phantomjs()
install.packages('kableExtra')
install.packages('kableExtra')
install.packages("kableExtra")
library(knitr)
opts_chunk$set(warning = FALSE,
message = FALSE,
comment = NA,
echo = F)
library(RColorBrewer)
library(readxl)
miel <- read_excel('miel.xlsx', sheet = 'mieles')
library(ggmap)
mapa <- qmap('Puerto Montt', zoom = 8)
library(magrittr)
library(dplyr)
cor.fenol.ax <- with(miel %>% filter(Localidad == 'Osorno'),
cor(fenoles, antioxidantes))
ggplot(data = miel %>% filter(Localidad == 'Osorno'),
aes(x = fenoles, y = antioxidantes)) +
geom_point() +
geom_smooth(method = 'lm') +
geom_text(data = NULL, x = 0.4, y = 4,
label = paste("Correlación = ", round(cor.fenol.ax, 3)),
size = 5) +
xlab('Fenoles  [g/kg]') +
ylab('Antioxidantes [mM Fe+2 eq]')
cor.fenol.ax
??correlation
with(miel %>% filter(Localidad == 'Osorno'),
psych::corr.test(fenoles, antioxidantes))
with(miel %>% filter(Localidad == 'Osorno'),
cor(fenoles, antioxidantes))
psych::corr.test(rnorm(10), rnorm(10))
corr.test(attitude)
psych::corr.test(attitude)
miel %>% filter(Localidad == 'Osorno')
miel
miel %>% filter(Localidad == 'Osorno') %>% select(fenoles, antioxidantes)
with(miel %>% filter(Localidad == 'Osorno') %>% select(fenoles, antioxidantes), psych::cor(fenoles, antioxidantes))
with(miel %>% filter(Localidad == 'Osorno') %>% select(fenoles, antioxidantes), psych::corr.test(fenoles, antioxidantes))
df.fenol.ax <- miel %>%
filter(Localidad == 'Osorno') %>%
select(fenoles, antioxidantes)
psych::corr.test(df.fenol.ax)
round(psych::corr.test(df.fenol.ax), 8)
unlink('C:/Users/Carlos Gomez/OneDrive/emejias_paper_junio_2017/Osorno_Avance_figuras_23_julio_2017_cache', recursive = TRUE)
install.packages('captioner')
devtools::install_github("github mkoohafkan/kfigr")
knitr::opts_chunk$set(echo = TRUE)
# This is a knitr hook to enable figure and table captions
# number figures
# from http://stackoverflow.com/a/18672268/1036500
library("knitr")
tn = local({
i = 0
function(x) {
i <<- i + 1
paste("<table><caption>", 'Figure ', i, ': ', x, "</caption><colgroup><col width='100'></col></colgroup><thead><tr class='header'></tr></thead><tbody></tbody></table><p>", sep = '')
}
})
knit_hooks$set(fig.cap = function(before, options, envir) {
if(!before)
tn(options$fig.cap)
})
default_output_hook = knit_hooks$get("output")
knit_hooks$set(output = function(x, options) {
if (is.null(options$fig.cap) == F)
x
else
default_output_hook(x,options)
})
# number tables
# from http://stackoverflow.com/a/18672268/1036500
to = local({
i = 0
function(x) {
i <<- i + 1
paste("<table><caption>", 'Table ', i, ': ', x, "</caption><colgroup><col width='100'></col></colgroup><thead><tr class='header'></tr></thead><tbody></tbody></table><p>", sep = '')
}
})
knit_hooks$set(tab.cap = function(before, options, envir) {
if(!before)
to(options$tab.cap)
})
default_output_hook = knit_hooks$get("output")
knit_hooks$set(output = function(x, options) {
if (is.null(options$tab.cap) == F)
x
else
default_output_hook(x,options)
})
xtable::print.xtable(xtable(head(mtcars),
caption = 'test1'),
caption.placement = 'top'
)
# Initialize knitr
library(knitr)
# set wd() for knitr chunks to the RProject directory
# opts_knit$set(root.dir = "C:/GraphDesign/TryPackages-R/CompareDocxOptions")
# set knitr options
opts_chunk$set(dev = "png", dpi = 300)
opts_chunk$set(echo = FALSE, include = FALSE)
opts_chunk$set(size = "small", background = "white")
opts_chunk$set(fig.path = "../Visuals/draft1-")
opts_chunk$set(highlight = TRUE, comment = NA, tidy = FALSE)
# function for creating sequential figure numbers
figureN = local({
i = 0
function(x) {
i <<- i + 1
paste('Figura ', i, '. ', x, sep = '')
}
})
# function for creating sequential table numbers
tableN = local({
i = 0
function(x) {
i <<- i + 1
paste('Tabla ', i, '. ', x, sep = '')
}
})
rate <- c(VADeaths)
# Initialize knitr
library(knitr)
# set knitr options
opts_chunk$set(dev = 'png', dpi = 300, fig.width = 9)
opts_chunk$set(echo = FALSE)
opts_chunk$set(size = 'small', background = 'white')
opts_chunk$set(highlight = TRUE,
comment = NA,
tidy = FALSE,
warning = F,
message = F)
# function for creating sequential figure numbers
figureN = local({
i = 0
function(x) {
i <<- i + 1
paste('Figura ', i, '. ', x, sep = '')
}
})
# function for creating sequential table numbers
tableN = local({
i = 0
function(x) {
i <<- i + 1
paste('Tabla ', i, '. ', x, sep = '')
}
})
set.seed(123)
x.caf <- rep(seq(0:0.5, by = 0.25), each = 3)
y.caf <- 200 + 30000*x.caf + rnorm(length(x.caf), 0, 200)
Replicado <- factor(rep(1:3, 5))
data.caf <- data.frame(Replicado, x.caf, y.caf)
data.caf
232600+197700
qf(0.95, 1,3)
qf(0.975, 1,3)
qf(0.95, 1,3)
factores
factor
factores
factores <- c('A: Materia grasa',
'B: Tiempo de Reaccion',
'C: Cantidad de Reactivo',
'D: Tipo de Reactivo')
factor <- c('A', 'd1', 'B', 'd2', 'C', 'd3', 'D')
Experimento <- 1:8
R <- c(100, 90, 100, 90, 80, 70, 70, 70)
pb.matriz <- read.table('pb_matrix.txt', header = F)
pb.matriz <- data.frame(pb.matriz)
colnames(pb.matriz) <- factor
matriz <- data.frame(Experimento, pb.matriz, R)
matriz
factores
efectos <- c(17.5, 25, -12.5, 75, 75, 25, 25)
tabla.efectos <- data.frame(Factor = c(factores, 'd1', 'd2', 'd3'), Efecto = efectos)
kable(tabla.efectos,
align = 'r')
library(knitr)
kable(tabla.efectos,
align = 'r')
17.5*8/4
1.75^2*2
17.5^2*2
17.5^2*2/45.8
round(efectos^2*2/45.8)
round(efectos^2*2/45.8, 2)
efectos <- c(17.5, 2.5, -12.5, 7.5, 7.5, 2.5, 2.5)
round(efectos^2*2/45.8, 2)
pb2 <- read.table('pb_matrix_num.txt')
pb2
pb2 <- data.frame(pb2, R)
pb2
fit <- lm(R ~ ., data = pb2)
fit
fit <- lm(R ~ ., data = pb2)
summary(fit)
fit <- lm(R ~ V1+V3+V5+V7, data = pb2)
summary(fit)
pb2
pb2 <- read.table('pb_matrix_num.txt')
pb2 <- data.frame(pb2, R = c(10, 9, 10,9,8,7,7,7))
fit <- lm(R ~ V1+V3+V5+V7, data = pb2)
summary(fit)
DanielPlot(fit)
library(FrF2)
DanielPlot(fit)
DanielPlot(fit2)
fit2 <- lm(R ~ ., data = pb2)
summary(fit)
DanielPlot(fit2)
sqrt(0.458)
fit <- aov(R ~ V1+V3+V5+V7, data = pb2)
fit
summary(fit)
fit2 <- aov(R ~ ., data = pb2)
summary(fit2)
fit <- aov(R ~ V1+V3+V5+V7, data = pb2)
summary(fit)
check(fit)
(fit)
MEPlot(fit)
install.packages('daewr')
halfnormal(fit)
pb2 <- read.table('pb_matrix_num.txt')
pb2 <- data.frame(pb2, R = c(10, 9, 10,9,8,7,7,7))
fit <- lm(R ~ V1+V3+V5+V7, data = pb2)
fit2 <- lm(R ~ ., data = pb2)
summary(fit)
summary(fit2)
DanielPlot(fit2)
MEPlot(fit)
halfnormal(fit)
halfnorm(fit)
library(daewr)
halfnorm(fit)
halfnorm(efectos)
MEPlot(fit)
colnames(pb2) <- factor
pb2
fit <- lm(R ~ A+B+C+D, data = pb2)
fit2 <- lm(R ~ ., data = pb2)
MEPlot(fit)
Factor <- factores
Efecto <- efectos
F.calculado <- round(efectos^2*2/45.8, 2)
tablaF <- data.frame(Factor, Efecto, F.calculado)
Factor
Efecto
Factor <- factores
Efecto <- efectos[c(1, 3, 5, 7)]
F.calculado <- round(efectos^2*2/45.8, 2)
tablaF <- data.frame(Factor, Efecto, F.calculado)
Efecto
factores
Factor <- factores
Efecto <- efectos[c(1, 3, 5, 7)]
F.calculado <- round(Efecto^2*2/45.8, 2)
tablaF <- data.frame(Factor, Efecto, F.calculado)
kable(tablaF,
col.names = c('Factor', 'Efecto', 'F calculado'),
align = 'lcc')
factores <- c('A: Reactivo derivatizante',
'B: Tiempo de Reaccion',
'C: Cantidad de Reactivo',
'D: Materia grasa')
factor <- c('A', 'd1', 'B', 'd2', 'C', 'd3', 'D')
Experimento <- 1:8
R <- c(100, 90, 100, 90, 80, 70, 70, 70)
pb.matriz <- read.table('pb_matrix.txt', header = F)
pb.matriz <- data.frame(pb.matriz)
colnames(pb.matriz) <- factor
matriz <- data.frame(Experimento, pb.matriz, R)
kable(matriz,
align = 'crrrrrrrr')
efectos <- c(17.5, 2.5, -12.5, 7.5, 7.5, 2.5, 2.5)
tabla.efectos <- data.frame(Factor = c(factores, 'd1', 'd2', 'd3'),
Efecto = efectos)
kable(tabla.efectos,
align = 'r')
efectos <- c(17.5, 2.5, -12.5, 7.5, 7.5, 2.5, 2.5)
tabla.efectos <- data.frame(Factor = c(factor, 'd1', 'd2', 'd3'),
Efecto = efectos)
efectos <- c(17.5, 2.5, -12.5, 7.5, 7.5, 2.5, 2.5)
tabla.efectos <- data.frame(Factor = factor,
Efecto = efectos)
kable(tabla.efectos,
align = 'r')
efectos <- c(17.5, 2.5, -12.5, 7.5, 7.5, 2.5, 2.5)
factores <- c('A: Reactivo derivatizante', 'd1',
'B: Tiempo de Reaccion', 'd2',
'C: Cantidad de Reactivo', 'd3',
'D: Materia grasa')
tabla.efectos <- data.frame(Factor = factores,
Efecto = efectos)
kable(tabla.efectos,
align = 'r')
efectos <- c(17.5, 7.5, 2.5, 2.5, -12.5, 2.5, 7.5)
factores <- c('A: Reactivo derivatizante', 'd1',
'B: Tiempo de Reaccion', 'd2',
'C: Cantidad de Reactivo', 'd3',
'D: Materia grasa')
tabla.efectos <- data.frame(Factor = factores,
Efecto = efectos)
kable(tabla.efectos,
align = 'r')
Factor <- factores
Efecto <- efectos[c(1, 3, 5, 7)]
F.calculado <- round(Efecto^2*2/45.8, 2)
tablaF <- data.frame(Factor, Efecto, F.calculado)
Factor <- factores
Efecto <- efectos[c(1, 3, 5, 7)]
Factor
Factor <- factores[c(1, 3, 5, 7)]
Efecto <- efectos[c(1, 3, 5, 7)]
F.calculado <- round(Efecto^2*2/45.8, 2)
tablaF <- data.frame(Factor, Efecto, F.calculado)
kable(tablaF,
col.names = c('Factor', 'Efecto', 'F calculado'),
align = 'lcc')
library(daewr)
pb2 <- read.table('pb_matrix_num.txt')
pb2 <- data.frame(pb2, R = c(10, 9, 10,9,8,7,7,7))
colnames(pb2) <- factor
fit <- lm(R ~ A+B+C+D, data = pb2)
fit2 <- lm(R ~ ., data = pb2)
MEPlot(fit,
main = 'Gráfico de efectos principales robustez')
pb2
MEPlot(fit,
main = 'Gráfico de efectos principales robustez', pch = 19, col= 'red')
factor.12 <- c('A', 'd1', 'B', 'd2', 'C', 'd3', 'D', 'd4', 'E', 'd5', 'F')
pb.12 <- pb(12, 11, randomize = F, factor.names = factor.12)
pb.12
(204-247.8)/247.8*100
install.packages('RefManageR')
setwd("C:/Users/Carlos Gomez/OneDrive/Analytical/Pagina_Web/cgomez")
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
setwd("C:/Users/Carlos Gomez/OneDrive/Analytical/Pagina_Web/test")
blogdown::new_site(theme = 'gcgushen/hugo-academic'')
blogdown::new_site(theme = 'gcgushen/hugo-academic')
blogdown::new_site(theme = 'gcushen/hugo-academic'')
blogdown::new_site(theme = 'gcushen/hugo-academic')
blogdown::new_site(theme = 'gcushen/hugo-academic')
blogdown::install_hugo(version = 0.18)
blogdown::install_hugo(version = 0.18, force = T)
blogdown::serve_site()
setwd("C:/Users/Carlos Gomez/OneDrive/Analytical/Pagina_Web/cgomez")
blogdown::serve_site()
blogdown::install_hugo(version = 0.24, force = T)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::install_hugo(version ='lastest')
blogdown::install_hugo(version ='lastest', force = T)
blogdown::install_hugo(version ='latest', force = T)
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
